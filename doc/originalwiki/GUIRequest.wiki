#summary Requirements for future GUI
#labels Phase-Requirements


This page documents the requirements for NARS GUI in the future. Some relevant considerations for future NARS architecture are described in Modules. The current GUI of NARS is explained in GUIGuide. 


= User types =

In the future, NARS may have three types of users:
  * a single _administrator_ who controls NARS
  * multiple _partners_ who communicate with NARS
  * multiple _observers_ who watch the activity of NARS

Each user is either a human being, or a computer or device managed by a human being. Therefore, at least three GUIs should be designed, one for each type, though a user can belong to more than one type at the same time.

The overall architecture of NARS will remain the same as shown in http://open-nars.googlecode.com/files/architecture.pdf , except the current single I/O channel will be extended into multiple channels.


= Administrator =

The administrator of NARS will control the system though a single console. The console GUI will support the control of the system on several aspects.

  * Inference control: The administrator can run the inference engine for a predetermined number of steps, run it continuously, or stop its running.

  * Memory control: The administrator can reset the memory to empty, save the current memory to a permanent storage, or load a saved memory to replace (not merge with) the current memory. The administrator should be able to manually edit the memory by create/delete/modify a concept, a task, or a belief.

  * Communication control: The administrator can approve or decline the requests for establishing a communication channel, or terminate an existing channel. Some of the decisions will be made by the system itself.

  * Parameter adjustment: Some of the system parameters can be dynamically adjusted within a predetermined range when the system is running.


= Partners =

The system will support multiple types of communication channels, as explained in Modules. Each communication channel provides experience (input) to the system, and realize the system's behaviors (output).

The manager of a channel will need a communication GUI to request the establishing of a channel, as well as to manage it when approved. For different types of channels, there are different management tasks.

  * For a _native channel_ between NARS implementations, no special support is needed, except the default functions, such as to display the communication in plain-text Narsese, and to save the communication history into a file.

  * For a _text-based channel_ between NARS and a human user or another computer, the tasks include to specify the adapter/parser that translate between Narsese and another language or format, to read input from a static knowledge source (file or database) at a specified speed, to support manually typed tasks with format checking and prompt, 

  * For a _sensorimotor channel_ between NARS and a computerized tool, the GUI should support ways to register the commands of the tool as Narsese operators, with restrictions on valid arguments, and initial knowledge about the preconditions and consequences of each operation.


= Observers =

Observers can watch the rum-time activity within the system in a browser, without any impact to the system.

An observer can watch the content of the memory (in terms of concepts), the task buffer (in terms of tasks), and a concept (in terms of tasks and beliefs). The content can be displayed as a static snap-shot, or a dynamic moving picture. In either way, the user should be able to specify thresholds and options, so as to focus on the most prominent features. It should be easy for the observer to move the view point, or to zoom in/out.

The observer can follow the inference engine step by step, and see the premises and conclusions.

Help information should be available to briefly explain the data, as well as to guide the user's activities.