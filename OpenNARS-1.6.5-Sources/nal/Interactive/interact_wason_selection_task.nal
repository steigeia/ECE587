//Javascript declaration, then reset (won't reset javascript context, that's what we make use of)
js("this.inp={}; this.lookCard=function(a){ a=a.toString(); if(this.inp[a]=="check") { return; } this.inp[a]="check"; if((a.indexOf('[')==-1 && a.indexOf('#')==-1) || a.indexOf('{')==-1 || a.indexOf('~')!=-1 || a.indexOf('&')!=-1 || a.indexOf('-')!=-1) { return; } ret=javax.swing.JOptionPane.showInputDialog(new javax.swing.JFrame(), 'I want to know the other side of the card '+a+' now. What is it?'); if(ret==null) { return; } if(a.indexOf('(*,{E}') != -1){ nar.addInput('<(*,{E},{'+ret+'}) --> card>.'); } if(a.indexOf('(*,{K}') != -1){ nar.addInput('<(*,{K},{'+ret+'}) --> card>.'); } if(a.indexOf(',{4})') != -1){ nar.addInput('<(*,{'+ret+'},{4}) --> card>.'); } if(a.indexOf(',{7})') != -1){ nar.addInput('<(*,{'+ret+'},{7}) --> card>.'); } }")!
*decisionthreshold=0.05

***Wason Selection Task
//The cards E, K, 4, 7 are present, each card has a symbol on one side, and a number on the other:
(&&,<#n1 --> num>,<#n2 --> num>,<#s1 --> sym>,<#s2 --> sym>,<{(*,{E},#n1),(*,{K},#n2),(*,#s1,{4}),(*,#s2,{7})} --> card>).
//each card has a symbol on one side, and a number on the other
<<(*,$1,$2) --> card> ==> (&&,<$1 --> sym>,<$2 --> num>)>.
//E is vocalic:
<{E} --> [vocalic]>.
//K is not vocalic:
(--,<{K} --> [vocalic]>).
//4 is even:
<{4} --> [even]>.
//7 is not even:
(--,<{7} --> [even]>).
//If there is a vocal on one side of a card, is there a even number on the other?
<(&/,<$num --> (/,card,[vocalic],_)>) ==> <$num --> [even]>>?
//if you know some interesting card, look at it
<<$sth --> card> =/> js("this.lookCard(arg[0])",$sth)>!
